/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import java.text.SimpleDateFormat;  
import java.util.Date; 
import java.text.ParseException;
import java.util.HashMap;
import javax.swing.JComboBox;

/**
 *
 * @author MarcusSkarud
 */
public class AgentPortal extends javax.swing.JFrame {

    private static InfDB db;
    private String agentID;
    private boolean admin;
    /**
     * Creates new form hejAgent
     */
    public AgentPortal(InfDB db, String agentID, boolean admin) {
        this.db = db;
        this.agentID = agentID;
        this.admin = admin;
        initComponents();
        initAgentPortal();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        mibPortalLabel = new javax.swing.JLabel();
        skiljestreck = new javax.swing.JSeparator();
        sidLabel = new javax.swing.JLabel();
        skiljeStreck1 = new javax.swing.JSeparator();
        bodyPanel = new javax.swing.JPanel();
        inloggadAgentPanel = new javax.swing.JPanel();
        inloggadAgentIDLabel = new javax.swing.JLabel();
        inloggadAgentNamnLabel = new javax.swing.JLabel();
        inloggadAgentTelefonLabel = new javax.swing.JLabel();
        inloggadAgentOmradeLabel = new javax.swing.JLabel();
        agentIDLabel = new javax.swing.JLabel();
        agentNamnLabel = new javax.swing.JLabel();
        agentTelefonLabel = new javax.swing.JLabel();
        agentOmradeLabel = new javax.swing.JLabel();
        bytLosenord = new javax.swing.JButton();
        skiljeStreck2 = new javax.swing.JSeparator();
        menyTabbedPane = new javax.swing.JTabbedPane();
        sokAlienPanel = new javax.swing.JPanel();
        resultatLabel = new javax.swing.JLabel();
        sökVerktygsPanel = new javax.swing.JPanel();
        sokOmradesBox = new javax.swing.JComboBox<>();
        sokPlatsBox = new javax.swing.JComboBox<>();
        listaAlienEfterPlatsButton = new javax.swing.JButton();
        sokPlatsLabel = new javax.swing.JLabel();
        omradeLabel = new javax.swing.JLabel();
        platsLabel = new javax.swing.JLabel();
        skiljeStreck3 = new javax.swing.JSeparator();
        sokRasLabel = new javax.swing.JLabel();
        rasLabel = new javax.swing.JLabel();
        sokRasBox = new javax.swing.JComboBox<>();
        listaAliensEfterRasButton = new javax.swing.JButton();
        skiljeStreck4 = new javax.swing.JSeparator();
        sokDatumLabel = new javax.swing.JLabel();
        franDatumSpinner = new javax.swing.JSpinner();
        tillDatumSpinner = new javax.swing.JSpinner();
        franLabel = new javax.swing.JLabel();
        tillLabel = new javax.swing.JLabel();
        listaAliensefterDatumButton = new javax.swing.JButton();
        skiljeStreck5 = new javax.swing.JSeparator();
        sokAllInfoLabel = new javax.swing.JLabel();
        namnLabel = new javax.swing.JLabel();
        sokAlienNamnTextField = new javax.swing.JTextField();
        valjLabel = new javax.swing.JLabel();
        valjAlienBox = new javax.swing.JComboBox<>();
        sokAllInfoButton = new javax.swing.JButton();
        resultatScrollPane = new javax.swing.JScrollPane();
        resultatTextArea = new javax.swing.JTextArea();
        registreraAndraAlienPanel = new javax.swing.JPanel();
        registreraAlienPanel = new javax.swing.JPanel();
        registreraAlienButton = new javax.swing.JButton();
        andraTaBortAlienPanel = new javax.swing.JPanel();
        andraTaBortAlienButton = new javax.swing.JButton();
        utrustningOmradePanel = new javax.swing.JPanel();
        registreraUtrustningPanel = new javax.swing.JPanel();
        registreraUtrustningButton = new javax.swing.JButton();
        sokOmradesChefPanel = new javax.swing.JPanel();
        soktOmradeBox = new javax.swing.JComboBox<>();
        visaInfoOmradeschefLabel = new javax.swing.JLabel();
        OmradeschefInfoPanel = new javax.swing.JPanel();
        omradeschefNamnLabel = new javax.swing.JLabel();
        omradeschefIDLabel = new javax.swing.JLabel();
        omradeschefTelefonLabl = new javax.swing.JLabel();
        ocNamnLabel = new javax.swing.JLabel();
        ocIDLabel = new javax.swing.JLabel();
        ocTelefonLabel = new javax.swing.JLabel();
        taBortUtrustningPanel = new javax.swing.JPanel();
        taBortUtrustningButton = new javax.swing.JButton();
        lanaUtrustningPanel = new javax.swing.JPanel();
        lanaUtrustningButton = new javax.swing.JButton();
        valjOmradeschefPanel = new javax.swing.JPanel();
        sattOmradeschefButton = new javax.swing.JButton();
        valjOmradeschefBox = new javax.swing.JComboBox<>();
        valjOmradeschefLabel = new javax.swing.JLabel();
        valjKontorschefPanel = new javax.swing.JPanel();
        valjKontorschefLabel = new javax.swing.JLabel();
        valjKontorschefBox = new javax.swing.JComboBox<>();
        valjKontorschefButton = new javax.swing.JButton();
        kontorschefTextField = new javax.swing.JTextField();
        nuvarandeKontorschefLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        laggTillAndraAgentPanel = new javax.swing.JPanel();
        registreraAgentPanel = new javax.swing.JPanel();
        registreraAgentButton = new javax.swing.JButton();
        andraTabortAgentPanel = new javax.swing.JPanel();
        andraTaBortAgentButton = new javax.swing.JButton();
        lanadUtrustningPanel = new javax.swing.JPanel();
        lanadUtrustningLabel = new javax.swing.JLabel();
        skiljeStreck6 = new javax.swing.JSeparator();
        lanadUtrustningScrollPane = new javax.swing.JScrollPane();
        lanadUtrustningTextArea = new javax.swing.JTextArea();
        uppdateraLanadUtrustningButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        sidPanel.setBackground(new java.awt.Color(120, 120, 120));
        sidPanel.setForeground(new java.awt.Color(255, 255, 255));
        sidPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        headerPanel.setBackground(new java.awt.Color(40, 40, 40));
        headerPanel.setPreferredSize(new java.awt.Dimension(1095, 100));

        headerLabel.setBackground(new java.awt.Color(120, 120, 120));
        headerLabel.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(180, 180, 180));
        headerLabel.setText("Men in Black - Sektor Skandinavien");

        mibPortalLabel.setBackground(new java.awt.Color(120, 120, 120));
        mibPortalLabel.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        mibPortalLabel.setForeground(new java.awt.Color(180, 180, 180));
        mibPortalLabel.setText("MiB-Portalen");

        skiljestreck.setForeground(new java.awt.Color(80, 80, 80));

        sidLabel.setBackground(new java.awt.Color(120, 120, 120));
        sidLabel.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        sidLabel.setForeground(new java.awt.Color(180, 180, 180));
        sidLabel.setText("AgentPortalen - ADMIN");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(headerLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(headerPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(mibPortalLabel))
                            .addComponent(skiljestreck, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sidLabel)
                .addGap(39, 39, 39))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(headerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skiljestreck, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mibPortalLabel)
                    .addComponent(sidLabel))
                .addContainerGap())
        );

        skiljeStreck1.setBackground(new java.awt.Color(0, 0, 0));
        skiljeStreck1.setForeground(new java.awt.Color(255, 255, 255));
        skiljeStreck1.setToolTipText("");

        bodyPanel.setBackground(new java.awt.Color(120, 120, 120));
        bodyPanel.setForeground(new java.awt.Color(100, 100, 100));

        inloggadAgentPanel.setBackground(new java.awt.Color(60, 60, 60));
        inloggadAgentPanel.setPreferredSize(new java.awt.Dimension(210, 166));

        inloggadAgentIDLabel.setForeground(new java.awt.Color(220, 220, 220));
        inloggadAgentIDLabel.setText("AgentID:");

        inloggadAgentNamnLabel.setForeground(new java.awt.Color(220, 220, 220));
        inloggadAgentNamnLabel.setText("Namn:");

        inloggadAgentTelefonLabel.setForeground(new java.awt.Color(220, 220, 220));
        inloggadAgentTelefonLabel.setText("Telefon:");

        inloggadAgentOmradeLabel.setForeground(new java.awt.Color(220, 220, 220));
        inloggadAgentOmradeLabel.setText("Område:");

        agentIDLabel.setForeground(new java.awt.Color(220, 220, 220));

        agentNamnLabel.setForeground(new java.awt.Color(220, 220, 220));

        agentTelefonLabel.setForeground(new java.awt.Color(220, 220, 220));

        agentOmradeLabel.setForeground(new java.awt.Color(220, 220, 220));

        bytLosenord.setText("Byt lösenord");
        bytLosenord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bytLosenordActionPerformed(evt);
            }
        });

        skiljeStreck2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout inloggadAgentPanelLayout = new javax.swing.GroupLayout(inloggadAgentPanel);
        inloggadAgentPanel.setLayout(inloggadAgentPanelLayout);
        inloggadAgentPanelLayout.setHorizontalGroup(
            inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inloggadAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bytLosenord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(inloggadAgentPanelLayout.createSequentialGroup()
                        .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inloggadAgentOmradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inloggadAgentNamnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inloggadAgentTelefonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agentNamnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agentTelefonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agentOmradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(inloggadAgentPanelLayout.createSequentialGroup()
                        .addComponent(inloggadAgentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(agentIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(skiljeStreck2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        inloggadAgentPanelLayout.setVerticalGroup(
            inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inloggadAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inloggadAgentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skiljeStreck2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agentNamnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inloggadAgentNamnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agentTelefonLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inloggadAgentTelefonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inloggadAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(agentOmradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inloggadAgentOmradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bytLosenord)
                .addGap(18, 18, Short.MAX_VALUE))
        );

        menyTabbedPane.setBackground(new java.awt.Color(130, 130, 130));
        menyTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        menyTabbedPane.setPreferredSize(new java.awt.Dimension(260, 400));

        sokAlienPanel.setBackground(new java.awt.Color(150, 150, 150));

        resultatLabel.setBackground(new java.awt.Color(170, 170, 170));
        resultatLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        resultatLabel.setForeground(new java.awt.Color(0, 0, 0));
        resultatLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultatLabel.setText("Resultat");
        resultatLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultatLabel.setOpaque(true);

        sökVerktygsPanel.setBackground(new java.awt.Color(170, 170, 170));
        sökVerktygsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sokOmradesBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sokOmradesBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokOmradesBoxActionPerformed(evt);
            }
        });

        sokPlatsBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        sokPlatsBox.setEnabled(false);

        listaAlienEfterPlatsButton.setText("Lista aliens");
        listaAlienEfterPlatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAlienEfterPlatsButtonActionPerformed(evt);
            }
        });

        sokPlatsLabel.setForeground(new java.awt.Color(0, 0, 0));
        sokPlatsLabel.setText("Lista aliens i område och plats");

        omradeLabel.setForeground(new java.awt.Color(0, 0, 0));
        omradeLabel.setText("Område:");
        omradeLabel.setPreferredSize(null);

        platsLabel.setForeground(new java.awt.Color(0, 0, 0));
        platsLabel.setText("Plats:");
        platsLabel.setPreferredSize(null);

        sokRasLabel.setForeground(new java.awt.Color(0, 0, 0));
        sokRasLabel.setText("Lista aliens av en viss ras");

        rasLabel.setForeground(new java.awt.Color(0, 0, 0));
        rasLabel.setText("Ras:");
        rasLabel.setPreferredSize(null);

        sokRasBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boglodite", "Squid", "Worm" }));

        listaAliensEfterRasButton.setText("Lista aliens");
        listaAliensEfterRasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAliensEfterRasButtonActionPerformed(evt);
            }
        });

        sokDatumLabel.setForeground(new java.awt.Color(0, 0, 0));
        sokDatumLabel.setText("Lista aliens registrerade mellan datum");

        franDatumSpinner.setModel(new javax.swing.SpinnerDateModel());

        tillDatumSpinner.setModel(new javax.swing.SpinnerDateModel());

        franLabel.setForeground(new java.awt.Color(0, 0, 0));
        franLabel.setText("Från:");

        tillLabel.setForeground(new java.awt.Color(0, 0, 0));
        tillLabel.setText("Till:");

        listaAliensefterDatumButton.setText("Lista aliens");
        listaAliensefterDatumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAliensefterDatumButtonActionPerformed(evt);
            }
        });

        sokAllInfoLabel.setForeground(new java.awt.Color(0, 0, 0));
        sokAllInfoLabel.setText("Sök all information om enskild alien");

        namnLabel.setForeground(new java.awt.Color(0, 0, 0));
        namnLabel.setText("Namn:");

        sokAlienNamnTextField.setName("sök..."); // NOI18N
        sokAlienNamnTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokAlienNamnTextFieldActionPerformed(evt);
            }
        });

        valjLabel.setForeground(new java.awt.Color(0, 0, 0));
        valjLabel.setText("Välj:");

        valjAlienBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        valjAlienBox.setPreferredSize(new java.awt.Dimension(330, 26));
        valjAlienBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valjAlienBoxActionPerformed(evt);
            }
        });

        sokAllInfoButton.setText("Sök alien");
        sokAllInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokAllInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sökVerktygsPanelLayout = new javax.swing.GroupLayout(sökVerktygsPanel);
        sökVerktygsPanel.setLayout(sökVerktygsPanelLayout);
        sökVerktygsPanelLayout.setHorizontalGroup(
            sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(skiljeStreck3)
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addComponent(rasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sokRasBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listaAliensEfterRasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(skiljeStreck4)))
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(omradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(platsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sokOmradesBox, 0, 110, Short.MAX_VALUE)
                                    .addComponent(sokPlatsBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(listaAlienEfterPlatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(sokRasLabel))
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(sokDatumLabel))
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(franLabel)
                                    .addComponent(tillLabel))
                                .addGap(8, 8, 8)
                                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tillDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(franDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(listaAliensefterDatumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sökVerktygsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sokPlatsLabel)
                .addGap(130, 130, 130))
            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(skiljeStreck5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sökVerktygsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(namnLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sokAlienNamnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(sokAllInfoButton)
                        .addGap(18, 18, 18))
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valjAlienBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(sokAllInfoLabel))
                            .addComponent(valjLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sökVerktygsPanelLayout.setVerticalGroup(
            sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(sokPlatsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sokOmradesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(omradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sokPlatsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(platsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sökVerktygsPanelLayout.createSequentialGroup()
                        .addComponent(listaAlienEfterPlatsButton)
                        .addGap(18, 18, 18)))
                .addComponent(skiljeStreck3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokRasLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sokRasBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaAliensEfterRasButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skiljeStreck4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokDatumLabel)
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(franDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(franLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tillDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tillLabel)))
                    .addGroup(sökVerktygsPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(listaAliensefterDatumButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skiljeStreck5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokAllInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sökVerktygsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namnLabel)
                    .addComponent(sokAlienNamnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sokAllInfoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(valjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valjAlienBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        resultatScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        resultatScrollPane.setViewportView(resultatTextArea);

        resultatTextArea.setEditable(false);
        resultatTextArea.setBackground(new java.awt.Color(255, 255, 255));
        resultatTextArea.setColumns(20);
        resultatTextArea.setRows(5);
        resultatScrollPane.setViewportView(resultatTextArea);

        javax.swing.GroupLayout sokAlienPanelLayout = new javax.swing.GroupLayout(sokAlienPanel);
        sokAlienPanel.setLayout(sokAlienPanelLayout);
        sokAlienPanelLayout.setHorizontalGroup(
            sokAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(sokAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sökVerktygsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sokAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addComponent(resultatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        sokAlienPanelLayout.setVerticalGroup(
            sokAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sokAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sokAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sokAlienPanelLayout.createSequentialGroup()
                        .addComponent(resultatLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultatScrollPane))
                    .addComponent(sökVerktygsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        menyTabbedPane.addTab("Sök alien", sokAlienPanel);

        registreraAndraAlienPanel.setBackground(new java.awt.Color(150, 150, 150));

        registreraAlienPanel.setBackground(new java.awt.Color(170, 170, 170));
        registreraAlienPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registreraAlienPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        registreraAlienButton.setText("Registrera alien");
        registreraAlienButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registreraAlienButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registreraAlienPanelLayout = new javax.swing.GroupLayout(registreraAlienPanel);
        registreraAlienPanel.setLayout(registreraAlienPanelLayout);
        registreraAlienPanelLayout.setHorizontalGroup(
            registreraAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registreraAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAlienButton, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );
        registreraAlienPanelLayout.setVerticalGroup(
            registreraAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAlienButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        andraTaBortAlienPanel.setBackground(new java.awt.Color(170, 170, 170));
        andraTaBortAlienPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        andraTaBortAlienPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        andraTaBortAlienButton.setText("Ändra/ta bort alien");
        andraTaBortAlienButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andraTaBortAlienButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout andraTaBortAlienPanelLayout = new javax.swing.GroupLayout(andraTaBortAlienPanel);
        andraTaBortAlienPanel.setLayout(andraTaBortAlienPanelLayout);
        andraTaBortAlienPanelLayout.setHorizontalGroup(
            andraTaBortAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, andraTaBortAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(andraTaBortAlienButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
        andraTaBortAlienPanelLayout.setVerticalGroup(
            andraTaBortAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(andraTaBortAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(andraTaBortAlienButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout registreraAndraAlienPanelLayout = new javax.swing.GroupLayout(registreraAndraAlienPanel);
        registreraAndraAlienPanel.setLayout(registreraAndraAlienPanelLayout);
        registreraAndraAlienPanelLayout.setHorizontalGroup(
            registreraAndraAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraAndraAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAlienPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(andraTaBortAlienPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );
        registreraAndraAlienPanelLayout.setVerticalGroup(
            registreraAndraAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraAndraAlienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registreraAndraAlienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(andraTaBortAlienPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registreraAlienPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(395, Short.MAX_VALUE))
        );

        menyTabbedPane.addTab("Registrera/ändra alien", registreraAndraAlienPanel);

        utrustningOmradePanel.setBackground(new java.awt.Color(150, 150, 150));

        registreraUtrustningPanel.setBackground(new java.awt.Color(170, 170, 170));
        registreraUtrustningPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registreraUtrustningPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        registreraUtrustningButton.setText("Registrera utrustning");
        registreraUtrustningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registreraUtrustningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registreraUtrustningPanelLayout = new javax.swing.GroupLayout(registreraUtrustningPanel);
        registreraUtrustningPanel.setLayout(registreraUtrustningPanelLayout);
        registreraUtrustningPanelLayout.setHorizontalGroup(
            registreraUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraUtrustningButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
        registreraUtrustningPanelLayout.setVerticalGroup(
            registreraUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraUtrustningButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sokOmradesChefPanel.setBackground(new java.awt.Color(170, 170, 170));
        sokOmradesChefPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        sokOmradesChefPanel.setPreferredSize(new java.awt.Dimension(275, 150));

        soktOmradeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        soktOmradeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soktOmradeBoxActionPerformed(evt);
            }
        });

        visaInfoOmradeschefLabel.setForeground(new java.awt.Color(0, 0, 0));
        visaInfoOmradeschefLabel.setText("Visa info om områdeschef:");

        OmradeschefInfoPanel.setBackground(new java.awt.Color(190, 190, 190));
        OmradeschefInfoPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        omradeschefNamnLabel.setForeground(new java.awt.Color(0, 0, 0));
        omradeschefNamnLabel.setText("Namn:");

        omradeschefIDLabel.setForeground(new java.awt.Color(0, 0, 0));
        omradeschefIDLabel.setText("AgentID:");

        omradeschefTelefonLabl.setForeground(new java.awt.Color(0, 0, 0));
        omradeschefTelefonLabl.setText("Telefonnr:");

        ocNamnLabel.setForeground(new java.awt.Color(0, 0, 0));
        ocNamnLabel.setText("---");

        ocIDLabel.setForeground(new java.awt.Color(0, 0, 0));
        ocIDLabel.setText("---");

        ocTelefonLabel.setForeground(new java.awt.Color(0, 0, 0));
        ocTelefonLabel.setText("---");

        javax.swing.GroupLayout OmradeschefInfoPanelLayout = new javax.swing.GroupLayout(OmradeschefInfoPanel);
        OmradeschefInfoPanel.setLayout(OmradeschefInfoPanelLayout);
        OmradeschefInfoPanelLayout.setHorizontalGroup(
            OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OmradeschefInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(omradeschefNamnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omradeschefIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omradeschefTelefonLabl, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ocNamnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ocIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ocTelefonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        OmradeschefInfoPanelLayout.setVerticalGroup(
            OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OmradeschefInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ocNamnLabel)
                    .addComponent(omradeschefNamnLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(omradeschefIDLabel)
                    .addComponent(ocIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OmradeschefInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(omradeschefTelefonLabl)
                    .addComponent(ocTelefonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sokOmradesChefPanelLayout = new javax.swing.GroupLayout(sokOmradesChefPanel);
        sokOmradesChefPanel.setLayout(sokOmradesChefPanelLayout);
        sokOmradesChefPanelLayout.setHorizontalGroup(
            sokOmradesChefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sokOmradesChefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sokOmradesChefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OmradeschefInfoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(soktOmradeBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sokOmradesChefPanelLayout.createSequentialGroup()
                        .addComponent(visaInfoOmradeschefLabel)
                        .addGap(0, 93, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sokOmradesChefPanelLayout.setVerticalGroup(
            sokOmradesChefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sokOmradesChefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(visaInfoOmradeschefLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(soktOmradeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OmradeschefInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        taBortUtrustningPanel.setBackground(new java.awt.Color(170, 170, 170));
        taBortUtrustningPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        taBortUtrustningPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        taBortUtrustningButton.setText("Ta bort utrustning");
        taBortUtrustningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taBortUtrustningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout taBortUtrustningPanelLayout = new javax.swing.GroupLayout(taBortUtrustningPanel);
        taBortUtrustningPanel.setLayout(taBortUtrustningPanelLayout);
        taBortUtrustningPanelLayout.setHorizontalGroup(
            taBortUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taBortUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taBortUtrustningButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
        taBortUtrustningPanelLayout.setVerticalGroup(
            taBortUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taBortUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(taBortUtrustningButton)
                .addContainerGap())
        );

        lanaUtrustningPanel.setBackground(new java.awt.Color(170, 170, 170));
        lanaUtrustningPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lanaUtrustningPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        lanaUtrustningButton.setText("Låna utrustning");
        lanaUtrustningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lanaUtrustningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lanaUtrustningPanelLayout = new javax.swing.GroupLayout(lanaUtrustningPanel);
        lanaUtrustningPanel.setLayout(lanaUtrustningPanelLayout);
        lanaUtrustningPanelLayout.setHorizontalGroup(
            lanaUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lanaUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lanaUtrustningButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
        lanaUtrustningPanelLayout.setVerticalGroup(
            lanaUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lanaUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lanaUtrustningButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        valjOmradeschefPanel.setBackground(new java.awt.Color(170, 170, 170));
        valjOmradeschefPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sattOmradeschefButton.setText("Sätt ny områdeschef");
        sattOmradeschefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sattOmradeschefButtonActionPerformed(evt);
            }
        });

        valjOmradeschefLabel.setForeground(new java.awt.Color(0, 0, 0));
        valjOmradeschefLabel.setText("Välj ny områdeschef:");

        javax.swing.GroupLayout valjOmradeschefPanelLayout = new javax.swing.GroupLayout(valjOmradeschefPanel);
        valjOmradeschefPanel.setLayout(valjOmradeschefPanelLayout);
        valjOmradeschefPanelLayout.setHorizontalGroup(
            valjOmradeschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, valjOmradeschefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valjOmradeschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(valjOmradeschefLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valjOmradeschefBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sattOmradeschefButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8))
        );
        valjOmradeschefPanelLayout.setVerticalGroup(
            valjOmradeschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valjOmradeschefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valjOmradeschefLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valjOmradeschefBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sattOmradeschefButton)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        valjKontorschefPanel.setBackground(new java.awt.Color(170, 170, 170));
        valjKontorschefPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        valjKontorschefLabel.setForeground(new java.awt.Color(0, 0, 0));
        valjKontorschefLabel.setText("Välj ny kontorschef:");

        valjKontorschefButton.setText("Sätt ny kontorschef");
        valjKontorschefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valjKontorschefButtonActionPerformed(evt);
            }
        });

        kontorschefTextField.setEditable(false);
        kontorschefTextField.setBackground(new java.awt.Color(250, 250, 250));
        kontorschefTextField.setForeground(new java.awt.Color(0, 0, 0));

        nuvarandeKontorschefLabel.setForeground(new java.awt.Color(0, 0, 0));
        nuvarandeKontorschefLabel.setText("Nuvarande kontorschef:");

        javax.swing.GroupLayout valjKontorschefPanelLayout = new javax.swing.GroupLayout(valjKontorschefPanel);
        valjKontorschefPanel.setLayout(valjKontorschefPanelLayout);
        valjKontorschefPanelLayout.setHorizontalGroup(
            valjKontorschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valjKontorschefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valjKontorschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valjKontorschefBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valjKontorschefLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kontorschefTextField)
                    .addComponent(nuvarandeKontorschefLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(valjKontorschefPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(valjKontorschefButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        valjKontorschefPanelLayout.setVerticalGroup(
            valjKontorschefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valjKontorschefPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuvarandeKontorschefLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kontorschefTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valjKontorschefLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valjKontorschefBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valjKontorschefButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout utrustningOmradePanelLayout = new javax.swing.GroupLayout(utrustningOmradePanel);
        utrustningOmradePanel.setLayout(utrustningOmradePanelLayout);
        utrustningOmradePanelLayout.setHorizontalGroup(
            utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utrustningOmradePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registreraUtrustningPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(taBortUtrustningPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(lanaUtrustningPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(valjKontorschefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valjOmradeschefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sokOmradesChefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        utrustningOmradePanelLayout.setVerticalGroup(
            utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utrustningOmradePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(utrustningOmradePanelLayout.createSequentialGroup()
                        .addComponent(registreraUtrustningPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lanaUtrustningPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(taBortUtrustningPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sokOmradesChefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(utrustningOmradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valjOmradeschefPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valjKontorschefPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(117, Short.MAX_VALUE))
        );

        menyTabbedPane.addTab("Utrustning/område", utrustningOmradePanel);

        laggTillAndraAgentPanel.setBackground(new java.awt.Color(150, 150, 150));

        registreraAgentPanel.setBackground(new java.awt.Color(170, 170, 170));
        registreraAgentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registreraAgentPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        registreraAgentButton.setText("Registrera agent");
        registreraAgentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registreraAgentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registreraAgentPanelLayout = new javax.swing.GroupLayout(registreraAgentPanel);
        registreraAgentPanel.setLayout(registreraAgentPanelLayout);
        registreraAgentPanelLayout.setHorizontalGroup(
            registreraAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registreraAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAgentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );
        registreraAgentPanelLayout.setVerticalGroup(
            registreraAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registreraAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAgentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        andraTabortAgentPanel.setBackground(new java.awt.Color(170, 170, 170));
        andraTabortAgentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        andraTabortAgentPanel.setPreferredSize(new java.awt.Dimension(275, 2));

        andraTaBortAgentButton.setText("Ändra/ta bort agent");
        andraTaBortAgentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andraTaBortAgentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout andraTabortAgentPanelLayout = new javax.swing.GroupLayout(andraTabortAgentPanel);
        andraTabortAgentPanel.setLayout(andraTabortAgentPanelLayout);
        andraTabortAgentPanelLayout.setHorizontalGroup(
            andraTabortAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, andraTabortAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(andraTaBortAgentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );
        andraTabortAgentPanelLayout.setVerticalGroup(
            andraTabortAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(andraTabortAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(andraTaBortAgentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout laggTillAndraAgentPanelLayout = new javax.swing.GroupLayout(laggTillAndraAgentPanel);
        laggTillAndraAgentPanel.setLayout(laggTillAndraAgentPanelLayout);
        laggTillAndraAgentPanelLayout.setHorizontalGroup(
            laggTillAndraAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laggTillAndraAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registreraAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(andraTabortAgentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );
        laggTillAndraAgentPanelLayout.setVerticalGroup(
            laggTillAndraAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laggTillAndraAgentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(laggTillAndraAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(andraTabortAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registreraAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(395, Short.MAX_VALUE))
        );

        menyTabbedPane.addTab("Lägg till/ändra agent", laggTillAndraAgentPanel);

        lanadUtrustningPanel.setBackground(new java.awt.Color(60, 60, 60));

        lanadUtrustningLabel.setForeground(new java.awt.Color(220, 220, 220));
        lanadUtrustningLabel.setText("Lånad utrustning:");

        skiljeStreck6.setForeground(new java.awt.Color(255, 255, 255));

        lanadUtrustningScrollPane.setBackground(new java.awt.Color(200, 200, 200));
        lanadUtrustningScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lanadUtrustningScrollPane.setForeground(new java.awt.Color(255, 255, 255));
        lanadUtrustningScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        lanadUtrustningScrollPane.setToolTipText("");
        lanadUtrustningScrollPane.setFocusable(false);
        lanadUtrustningScrollPane.setOpaque(false);
        lanadUtrustningScrollPane.setPreferredSize(new java.awt.Dimension(200, 405));
        lanadUtrustningScrollPane.setRowHeaderView(null);
        lanadUtrustningScrollPane.setVerifyInputWhenFocusTarget(false);
        lanadUtrustningScrollPane.setViewportView(lanadUtrustningTextArea);

        lanadUtrustningTextArea.setEditable(false);
        lanadUtrustningTextArea.setBackground(new java.awt.Color(250, 250, 250));
        lanadUtrustningTextArea.setColumns(20);
        lanadUtrustningTextArea.setForeground(new java.awt.Color(0, 0, 0));
        lanadUtrustningTextArea.setLineWrap(true);
        lanadUtrustningTextArea.setRows(1);
        lanadUtrustningTextArea.setTabSize(1);
        lanadUtrustningTextArea.setToolTipText("");
        lanadUtrustningTextArea.setWrapStyleWord(true);
        lanadUtrustningTextArea.setAutoscrolls(false);
        lanadUtrustningTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lanadUtrustningTextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        lanadUtrustningTextArea.setHighlighter(null);
        lanadUtrustningTextArea.setMinimumSize(new java.awt.Dimension(207, 405));
        lanadUtrustningTextArea.setVerifyInputWhenFocusTarget(false);
        lanadUtrustningScrollPane.setViewportView(lanadUtrustningTextArea);

        uppdateraLanadUtrustningButton.setText("Uppdatera");
        uppdateraLanadUtrustningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uppdateraLanadUtrustningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lanadUtrustningPanelLayout = new javax.swing.GroupLayout(lanadUtrustningPanel);
        lanadUtrustningPanel.setLayout(lanadUtrustningPanelLayout);
        lanadUtrustningPanelLayout.setHorizontalGroup(
            lanadUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(skiljeStreck6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(lanadUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lanadUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uppdateraLanadUtrustningButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lanadUtrustningScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(lanadUtrustningPanelLayout.createSequentialGroup()
                        .addComponent(lanadUtrustningLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        lanadUtrustningPanelLayout.setVerticalGroup(
            lanadUtrustningPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lanadUtrustningPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lanadUtrustningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skiljeStreck6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lanadUtrustningScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uppdateraLanadUtrustningButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(inloggadAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lanadUtrustningPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menyTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(inloggadAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lanadUtrustningPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(menyTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout sidPanelLayout = new javax.swing.GroupLayout(sidPanel);
        sidPanel.setLayout(sidPanelLayout);
        sidPanelLayout.setHorizontalGroup(
            sidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidPanelLayout.createSequentialGroup()
                .addGroup(sidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidPanelLayout.createSequentialGroup()
                        .addComponent(skiljeStreck1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(bodyPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE))
                .addContainerGap())
        );
        sidPanelLayout.setVerticalGroup(
            sidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(skiljeStreck1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // öppnar ett nytt fönster med möjlighet att ändra lösenrod för din agent.
    private void bytLosenordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bytLosenordActionPerformed
        new BytLosenord(db, agentID, true).setVisible(true);
    }//GEN-LAST:event_bytLosenordActionPerformed

    @SuppressWarnings("unchecked")
    // fyller platsboxen med information beroende på vilket alternativ som vatls under områdesboxen.
    private void sokOmradesBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokOmradesBoxActionPerformed
        String omradet = sokOmradesBox.getSelectedItem().toString();
        
        try{
        ArrayList<String> platsIOmradeIDB = db.fetchColumn("SELECT BENAMNING FROM PLATS WHERE FINNS_I = (SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = \'" + omradet + "\')");
        DefaultComboBoxModel platserna = new DefaultComboBoxModel();
        for(String omrade : platsIOmradeIDB){
            platserna.addElement(omrade);
        }
        platserna.addElement("ALLA");
        sokPlatsBox.setEnabled(true);
        sokPlatsBox.setModel(platserna);       
        }
        catch(InfException undantag){
            System.out.println("Fel med databas!" + undantag);
        }
        
    }//GEN-LAST:event_sokOmradesBoxActionPerformed

    @SuppressWarnings("unchecked")
    // hämtar infomration från db om vilka aliens som finns på vilka platser och skriver ut informationen beroende på vilket alternativ som har valts.
    private void listaAlienEfterPlatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAlienEfterPlatsButtonActionPerformed
        resultatTextArea.setText("");
        String resultatsträng = "";
        String sökPlats = sokPlatsBox.getSelectedItem().toString();

        ArrayList<String> alienPaPlats = new ArrayList<String>();
        
        try{
            if (sökPlats.equals("ALLA")){
                sökPlats = sokOmradesBox.getSelectedItem().toString();
                alienPaPlats = db.fetchColumn("SELECT NAMN FROM ALIEN WHERE PLATS IN (SELECT PLATS_ID FROM PLATS WHERE FINNS_I = (SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = \'" + sökPlats + "\'))");
                
            }
            else{
                alienPaPlats = db.fetchColumn("SELECT NAMN FROM ALIEN WHERE PLATS = (SELECT PLATS_ID FROM PLATS WHERE BENAMNING = \'" + sökPlats + "\')");
            }
        
            if (alienPaPlats == null || alienPaPlats.contains(null)){
                resultatsträng = "Inga aliens på valda platsen!";
            }
            else{
                for (String alien : alienPaPlats){
                    resultatsträng += alien + "\n";
                }
            }
            resultatTextArea.setText(resultatsträng);
        }
        catch(InfException undantag){
        
        }
        
    }//GEN-LAST:event_listaAlienEfterPlatsButtonActionPerformed
        // hämtar information om vald alien för varje ras och fyller ut deras namn i resultatlistan.
    private void listaAliensEfterRasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAliensEfterRasButtonActionPerformed
        try{
            String sökRas = sokRasBox.getSelectedItem().toString().toUpperCase();
            String resultatsträng = "";
            ArrayList<String> rasAliens = db.fetchColumn("SELECT NAMN FROM ALIEN WHERE ALIEN_ID IN (SELECT ALIEN_ID FROM " + sökRas + ")");
            for (String rasAlien : rasAliens){
                resultatsträng += rasAlien + "\n";
            }
            resultatTextArea.setText(resultatsträng);
        }
        catch(InfException undantag){
            System.out.println("Något gick fel! " + undantag);
        }
    }//GEN-LAST:event_listaAliensEfterRasButtonActionPerformed
        // hämtar information om alien mellan 2 olika valda datum.
    private void listaAliensefterDatumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAliensefterDatumButtonActionPerformed
        try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String franD = dateFormat.format(franDatumSpinner.getValue());
            String tillD = dateFormat.format(tillDatumSpinner.getValue());
            
            String resultatsträng = "";
            ArrayList<String> alienMellanDatum = db.fetchColumn("SELECT NAMN FROM ALIEN WHERE REGISTRERINGSDATUM BETWEEN \'" + franD + "\' AND \'" + tillD + "\'");
            for (String alien : alienMellanDatum){
                resultatsträng += alien + "\n";
            }
            resultatTextArea.setText(resultatsträng);
        }
        catch(InfException undantag){
            System.out.println(undantag);
        }
    }//GEN-LAST:event_listaAliensefterDatumButtonActionPerformed

    @SuppressWarnings("unchecked")
    // denna metod fyller textarean för "resultat" näer aliens ska listas. beroende på vilken information som valts i menyerna.
    private void sokAlienNamnTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokAlienNamnTextFieldActionPerformed
        String resultatsträng = "";
        try{
            ArrayList<String> aliensLista = new ArrayList<String>();
            aliensLista = db.fetchColumn("SELECT ALIEN_ID FROM ALIEN WHERE NAMN = \'" + sokAlienNamnTextField.getText() + "\'");
            if (aliensLista == null){
                resultatsträng = "Ingen alien hittad!";
                valjLabel.setVisible(false);                
                valjAlienBox.setVisible(false);
            }
            else if (aliensLista.size() == 1){
                int alienID = Integer.parseInt(db.fetchSingle("SELECT ALIEN_ID FROM ALIEN WHERE NAMN = \'" + sokAlienNamnTextField.getText() + "\'"));
                resultatsträng = sökAllInfo(alienID);
                valjLabel.setVisible(false);                
                valjAlienBox.setVisible(false);
            }
            else{
                resultatsträng = "Var god specificera din sökning.";
                ArrayList<HashMap<String,String>> aliens = db.fetchRows("SELECT * FROM ALIEN WHERE NAMN = \'" + sokAlienNamnTextField.getText() + "\'");

                DefaultComboBoxModel aliensForCBox = new DefaultComboBoxModel();
                for(HashMap alien : aliens){
                    String ras = "";
                    String extra = "";
                    if (db.fetchSingle("SELECT ALIEN_ID FROM BOGLODITE WHERE ALIEN_ID = " + alien.get("ALIEN_ID")) != null){
                        ras = "Boglodite";
                        extra = " | Antal boogies: " + db.fetchSingle("SELECT ANTAL_BOOGIES FROM BOGLODITE WHERE ALIEN_ID = " + alien.get("ALIEN_ID"));
                    }
                    else if(db.fetchSingle("SELECT ALIEN_ID FROM SQUID WHERE ALIEN_ID = " + alien.get("ALIEN_ID")) != null){
                        ras = "Squid";
                        extra = " | Antal armar: " + db.fetchSingle("SELECT ANTAL_ARMAR FROM SQUID WHERE ALIEN_ID = " + alien.get("ALIEN_ID"));                        
                    }
                    else if(db.fetchSingle("SELECT ALIEN_ID FROM WORM WHERE ALIEN_ID = " + alien.get("ALIEN_ID")) != null){
                        ras = "Worm";
                    }
                    String alienAlternativ = "ID: " + alien.get("ALIEN_ID") + " | Ras: " + ras + extra + " | Plats: " + db.fetchSingle("SELECT BENAMNING FROM PLATS WHERE PLATS_ID = " + alien.get("PLATS"));
                    aliensForCBox.addElement(alienAlternativ);
                }
                valjAlienBox.setModel(aliensForCBox);
                valjLabel.setVisible(true);                
                valjAlienBox.setVisible(true);
            }
            resultatTextArea.setText(resultatsträng);
            resultatTextArea.setCaretPosition(0);
        }
        catch(InfException undantag){
            System.out.println("Något gick fel! " + undantag);
        }
    }//GEN-LAST:event_sokAlienNamnTextFieldActionPerformed

    private void valjAlienBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valjAlienBoxActionPerformed
        String[] alienSök = valjAlienBox.getSelectedItem().toString().split(" ");
        int alienID = Integer.parseInt(alienSök[1]);
        String allInfoOmAlien = sökAllInfo(alienID);
        resultatTextArea.setText(allInfoOmAlien);
    }//GEN-LAST:event_valjAlienBoxActionPerformed

    private void registreraAlienButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registreraAlienButtonActionPerformed
        new RegistreraAlien(db).setVisible(true);
    }//GEN-LAST:event_registreraAlienButtonActionPerformed

    private void andraTaBortAlienButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andraTaBortAlienButtonActionPerformed
        new AndraTaBortAlien(db, admin).setVisible(true);
    }//GEN-LAST:event_andraTaBortAlienButtonActionPerformed

    private void registreraUtrustningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registreraUtrustningButtonActionPerformed
        new RegistreraUtrustning(db).setVisible(true);
    }//GEN-LAST:event_registreraUtrustningButtonActionPerformed
    @SuppressWarnings("unchecked")
    // hela denna metod utöfr ifyllningar för det sökta området. den hittar fram nuvarande info om områdeschef samt skriver ut den information
    // Metoden fyller också comboxen med namn på samtliga agenter i det området.
    private void soktOmradeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soktOmradeBoxActionPerformed
        String söktOmråde = soktOmradeBox.getSelectedItem().toString();
        DefaultComboBoxModel agenterIOmrade = new DefaultComboBoxModel();

        try{
            ArrayList<HashMap<String, String>> agenternaIOmrade = db.fetchRows("SELECT * FROM AGENT WHERE OMRADE = (SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = '" + soktOmradeBox.getSelectedItem().toString() + "')");
            if (agenternaIOmrade == null){
                agenterIOmrade.addElement("---");
            }
            else{
                for (HashMap agenterna : agenternaIOmrade){
                    agenterIOmrade.addElement("AgentID: " + agenterna.get("AGENT_ID") + " | Namn: " + agenterna.get("NAMN"));
                }
            }
            valjOmradeschefBox.setModel(agenterIOmrade);

            
            HashMap<String,String> omradesChef = db.fetchRow("SELECT * FROM AGENT WHERE AGENT_ID = (SELECT AGENT_ID FROM OMRADESCHEF WHERE OMRADE = (SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = \'" + söktOmråde + "\'))");
            if (omradesChef == null){
                ocNamnLabel.setText("---");
                ocIDLabel.setText("---");
                ocTelefonLabel.setText("---");
            }
            else{
                ocNamnLabel.setText(omradesChef.get("NAMN"));
                ocIDLabel.setText(omradesChef.get("AGENT_ID"));
                ocTelefonLabel.setText(omradesChef.get("TELEFON"));
            }
        }
        catch(InfException undantag){
            System.out.println("Något gick fel! " + undantag);
        }
        
    }//GEN-LAST:event_soktOmradeBoxActionPerformed

    private void sokAllInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokAllInfoButtonActionPerformed
        sokAlienNamnTextFieldActionPerformed(evt);
    }//GEN-LAST:event_sokAllInfoButtonActionPerformed

    private void taBortUtrustningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taBortUtrustningButtonActionPerformed
        new TaBortUtrustning(db).setVisible(true);
    }//GEN-LAST:event_taBortUtrustningButtonActionPerformed

    private void lanaUtrustningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lanaUtrustningButtonActionPerformed
        new LanaUtrustning(db, agentID).setVisible(true);
    }//GEN-LAST:event_lanaUtrustningButtonActionPerformed

    private void uppdateraLanadUtrustningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uppdateraLanadUtrustningButtonActionPerformed
        setLanadUtrustningJTextArea(agentID);
    }//GEN-LAST:event_uppdateraLanadUtrustningButtonActionPerformed

    private void registreraAgentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registreraAgentButtonActionPerformed
        new RegistreraAgent(db).setVisible(true);
    }//GEN-LAST:event_registreraAgentButtonActionPerformed

    private void andraTaBortAgentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andraTaBortAgentButtonActionPerformed
        new AndraTaBortAgent(db).setVisible(true);
    }//GEN-LAST:event_andraTaBortAgentButtonActionPerformed
    @SuppressWarnings("unchecked")
    // sätter ny omfrådeschef beroende på vilket område som är valt i områdesboxen och vilka agenter som finns tillgängliga inom det området.
    private void sattOmradeschefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sattOmradeschefButtonActionPerformed
        try{
            String[] agentSök = valjOmradeschefBox.getSelectedItem().toString().split(" ");
            int agentID = Integer.parseInt(agentSök[1]);
            
            String hämtatOmrådesID = db.fetchSingle("SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = '" + soktOmradeBox.getSelectedItem().toString() + "'");
            String fråga = db.fetchSingle("SELECT AGENT_ID FROM OMRADESCHEF WHERE OMRADE = " + hämtatOmrådesID);
            if (fråga == null){
                db.insert("INSERT INTO OMRADESCHEF VALUES ( " + agentID + " , " + hämtatOmrådesID + ")");
            }
            else{
                db.update("UPDATE OMRADESCHEF SET AGENT_ID = " + agentID + " WHERE OMRADE = " + hämtatOmrådesID);
            }
            soktOmradeBoxActionPerformed(evt);
            
        }
        catch(InfException undantag){
            System.out.println(undantag);
        }
    }//GEN-LAST:event_sattOmradeschefButtonActionPerformed
    @SuppressWarnings("unchecked")
    // hämtar nuvarande kontorschef i form av objekt och ändrar till en ny kontorschef efter vald ny agent från valjkontorschefs boxen.
    private void valjKontorschefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valjKontorschefButtonActionPerformed
        try{
            String[] agentSök = valjKontorschefBox.getSelectedItem().toString().split(" ");
            int agentID = Integer.parseInt(agentSök[1]);
            db.update("UPDATE KONTORSCHEF SET AGENT_ID = " + agentID + " WHERE KONTORSBETECKNING = 'Örebrokontoret'");
            initkontorsChefTextField();
            
        }
        catch(InfException undantag){
            System.out.println(undantag);
        }
    }//GEN-LAST:event_valjKontorschefButtonActionPerformed

   
    @SuppressWarnings("unchecked")
    // hämtar nuvarande kontorschef under utrsutning/område direkt när du loggar in som agent.
    private void initkontorsChefTextField(){
        
        try{
           String hämtaAgentID = db.fetchSingle("SELECT AGENT_ID FROM KONTORSCHEF");
           
        HashMap<String,String> hämtaOC = db.fetchRow("SELECT * FROM AGENT WHERE AGENT_ID = "+hämtaAgentID);
        kontorschefTextField.setText("Namn: "+ hämtaOC.get("NAMN")+" | Agent ID: "+ hämtaOC.get("AGENT_ID") );
        }
        catch (InfException e){
        }
        
        
    }
    
    @SuppressWarnings("unchecked")
    // metod för att söka all info om en viss alien och returenera all info formaterat som en string.
    private String sökAllInfo(int iD){
        String resultatsträng = "";
        String ras = "";
        String extra = "";
        try{
        
        if (db.fetchSingle("SELECT ALIEN_ID FROM BOGLODITE WHERE ALIEN_ID = " + iD) != null){
                        ras = "Boglodite";
                        extra = "Antal boogies:\n  " + db.fetchSingle("SELECT ANTAL_BOOGIES FROM BOGLODITE WHERE ALIEN_ID = " + iD);
                    }
                    else if(db.fetchSingle("SELECT ALIEN_ID FROM SQUID WHERE ALIEN_ID = " + iD) != null){
                        ras = "Squid";
                        extra = "Antal armar:\n  " + db.fetchSingle("SELECT ANTAL_ARMAR FROM SQUID WHERE ALIEN_ID = " + iD);                        
                    }
                    else if(db.fetchSingle("SELECT ALIEN_ID FROM WORM WHERE ALIEN_ID = " + iD) != null){
                        ras = "Worm";
                    }    
            
            
            
            
        HashMap<String, String> aliens = db.fetchRow("SELECT * FROM ALIEN WHERE ALIEN_ID = " + iD);
        resultatsträng = "Namn:\n  " + aliens.get("NAMN")
            + "\nAlienID:\n  " + aliens.get("ALIEN_ID")
            + "\nRegistreringsdatum:\n  " + aliens.get("REGISTRERINGSDATUM")
            + "\nTelefon:\n  " + aliens.get("TELEFON")
            + "\n----------"
            + "\nRas:\n  " + ras
            + "\n" + extra    
            + "\n----------"
            + "\nOmråde:\n  " + db.fetchSingle("SELECT BENAMNING FROM OMRADE WHERE OMRADES_ID = (SELECT FINNS_I FROM PLATS WHERE PLATS_ID = " + Integer.parseInt(aliens.get("PLATS")) + ")")
            + "\nPlats:\n  " + db.fetchSingle("SELECT BENAMNING FROM PLATS WHERE PLATS_ID = " + Integer.parseInt(aliens.get("PLATS")))
            + "\n----------"
                
            + "\nAnsvarig Agent:\n  " + db.fetchSingle("SELECT NAMN FROM AGENT WHERE AGENT_ID = " + Integer.parseInt(aliens.get("ANSVARIG_AGENT")));
        }
        catch (InfException undantag){
            JOptionPane.showMessageDialog(null, "Något gick fel med databasuppkopplingen!");
            System.out.println("Något gick fel! " + undantag);
        }
        return resultatsträng;
    }    
    
    @SuppressWarnings("unchecked")    
    private void setOmradeJComboBox(JComboBox valdComboBox){
        // fyller comboboxen med valt område i de comboxarna metoden används
        try{    
        ArrayList<String> omradenIDB = db.fetchColumn("SELECT BENAMNING FROM OMRADE");
        DefaultComboBoxModel omradena = new DefaultComboBoxModel();
        for(String omrade : omradenIDB){
            omradena.addElement(omrade);
        }
        valdComboBox.setModel(omradena);       
        }
        catch(InfException undantag){
            System.out.println("Fel med databas!" + undantag);
        }
        
    }
    
    @SuppressWarnings("unchecked")
    // metod för att välja alien mellan olika registreringsdatum i sökfunktionen
    private void setDatumJSpinner(){
        try{
            String stringDatum = db.fetchSingle("SELECT MIN(REGISTRERINGSDATUM) FROM ALIEN");  
            Date franDatumet=new SimpleDateFormat("yyyy-MM-dd").parse(stringDatum);  
            franDatumSpinner.setValue(franDatumet);
            stringDatum = db.fetchSingle("SELECT MAX(REGISTRERINGSDATUM) FROM ALIEN");  
            Date tillDatumet=new SimpleDateFormat("yyyy-MM-dd").parse(stringDatum);  
            tillDatumSpinner.setValue(tillDatumet);
        }
        catch(InfException undantag){
            System.out.println(undantag);
        }
        catch(ParseException undantag2){
            System.out.println(undantag2);
        }
    }
    
    
    @SuppressWarnings("unchecked")
    private void setLanadUtrustningJTextArea(String agentID){
        // metod för att fylla ut lånad utrsutning txt.area.
        lanadUtrustningTextArea.setText("");
        String vapenSträng = "";
        String kommunikationSträng = "";
        String teknikSträng = "";
        
        try{
            ArrayList<String> allLanadUtrustning = db.fetchColumn("SELECT UTRUSTNINGS_ID FROM INNEHAR_UTRUSTNING WHERE AGENT_ID = " + agentID);
            if (allLanadUtrustning == null){
                lanadUtrustningTextArea.setText("Ingen lånad utrustning");
                
            }
            else{
            for (String utrustning : allLanadUtrustning){
                String utrustningsNamn = db.fetchSingle("SELECT BENAMNING FROM UTRUSTNING WHERE UTRUSTNINGS_ID = " + utrustning);
                String laneDatum = db.fetchSingle("SELECT UTKVITTERINGSDATUM FROM INNEHAR_UTRUSTNING WHERE UTRUSTNINGS_ID = " + utrustning + " AND AGENT_ID = " + agentID);
                
                String resultatSträng = db.fetchSingle("SELECT OVERFORINGSTEKNIK FROM KOMMUNIKATION WHERE UTRUSTNINGS_ID = " + utrustning);
                
                if(resultatSträng == null){
                    resultatSträng = db.fetchSingle("SELECT KRAFTKALLA FROM TEKNIK WHERE UTRUSTNINGS_ID = " + utrustning);
                    if (resultatSträng == null){
                        resultatSträng = db.fetchSingle("SELECT KALIBER FROM VAPEN WHERE UTRUSTNINGS_ID = " + utrustning);
                        vapenSträng += "ID: " + utrustning + "\nNamn: " + utrustningsNamn + "\nKaliber: " + resultatSträng + "\nLånedatum: " + laneDatum + "\n\n";

                    }
                    else{
                        teknikSträng += "ID: " + utrustning + "\nNamn: " + utrustningsNamn + "\nKraftkälla: " + resultatSträng + "\nLånedatum: " + laneDatum + "\n\n";

                    }
                
                }
                else{
                    kommunikationSträng += "ID: " + utrustning + "\nNamn: " + utrustningsNamn + "\nÖverföringsteknik: " + resultatSträng + "\nLånedatum: " + laneDatum + "\n\n";
                }
                
            }
            if (!vapenSträng.equals("")){
                vapenSträng = "-----\nVAPEN\n-----\n" + vapenSträng;
            }
            if (!kommunikationSträng.equals("")){
                kommunikationSträng = "-----\nKOMMUNIKATION\n-----\n" + kommunikationSträng;                
            }
            if (!teknikSträng.equals("")){
                teknikSträng = "-----\nTEKNIK\n-----\n" + teknikSträng;                
            }
            
            lanadUtrustningTextArea.setText(vapenSträng + kommunikationSträng + teknikSträng);
            lanadUtrustningTextArea.setCaretPosition(0);
            }
            
        }
        catch(InfException undantag){
            System.out.println("Fel med databasen! " + undantag);
        }
    
    }

    @SuppressWarnings("unchecked")
    // fyller ut komboboxar direkt när vi loggar in som agent. Fyller även ut info om inloggad agent och lånad utrsutning.
    private void initAgentPortal(){
        setOmradeJComboBox(sokOmradesBox);
        setOmradeJComboBox(soktOmradeBox);
        setLanadUtrustningJTextArea(agentID);
        setDatumJSpinner();
        setAdminMode(admin);
        setAgenterIOmrade();
        initkontorsChefTextField();
        

        
        valjLabel.setVisible(false);
        valjAlienBox.setVisible(false);
        
        try {
            agentIDLabel.setText(agentID);
            agentNamnLabel.setText(db.fetchSingle("SELECT NAMN FROM AGENT WHERE AGENT_ID = " + agentID));
            agentOmradeLabel.setText(String.valueOf(db.fetchSingle("SELECT BENAMNING FROM OMRADE WHERE OMRADES_ID = (SELECT OMRADE FROM AGENT WHERE AGENT_ID = " + agentID + ")")));
            agentTelefonLabel.setText(db.fetchSingle("SELECT TELEFON FROM AGENT WHERE AGENT_ID = " + agentID));            
        }
        catch (InfException undantag){
            JOptionPane.showMessageDialog(null, "Någonting gick fel!");
        }
    }
    
    
    @SuppressWarnings("unchecked")
    // hämtar alla agenter för att välja ny kontorschef
    private void setAgenterIOmrade(){
        
        DefaultComboBoxModel agenterIOmrade = new DefaultComboBoxModel();

        try{
            ArrayList<HashMap<String, String>> agenternaIDatabasen = db.fetchRows("SELECT * FROM AGENT ");
            
                for (HashMap agenterna : agenternaIDatabasen){
                    agenterIOmrade.addElement("AgentID: " + agenterna.get("AGENT_ID") + " | Namn: " + agenterna.get("NAMN"));
                }
 
            valjKontorschefBox.setModel(agenterIOmrade);
        }
        catch (InfException undantag){
            System.out.println(undantag);
        
        }
        
    
    }
    // beroende på om en vanlig agent loggar in tas vissa funktioner bort. vi sätter dem som "false" i set.visible().
    private void setAdminMode(boolean adminStatus){
        if (!adminStatus){
            menyTabbedPane.remove(laggTillAndraAgentPanel);
            sidLabel.setText("AgentPortal");
            taBortUtrustningPanel.setVisible(false);
            andraTaBortAlienButton.setText("Ändra alien");
            valjOmradeschefPanel.setVisible(false);
            valjKontorschefPanel.setVisible(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OmradeschefInfoPanel;
    private javax.swing.JLabel agentIDLabel;
    private javax.swing.JLabel agentNamnLabel;
    private javax.swing.JLabel agentOmradeLabel;
    private javax.swing.JLabel agentTelefonLabel;
    private javax.swing.JButton andraTaBortAgentButton;
    private javax.swing.JButton andraTaBortAlienButton;
    private javax.swing.JPanel andraTaBortAlienPanel;
    private javax.swing.JPanel andraTabortAgentPanel;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton bytLosenord;
    private javax.swing.JSpinner franDatumSpinner;
    private javax.swing.JLabel franLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel inloggadAgentIDLabel;
    private javax.swing.JLabel inloggadAgentNamnLabel;
    private javax.swing.JLabel inloggadAgentOmradeLabel;
    private javax.swing.JPanel inloggadAgentPanel;
    private javax.swing.JLabel inloggadAgentTelefonLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kontorschefTextField;
    private javax.swing.JPanel laggTillAndraAgentPanel;
    private javax.swing.JButton lanaUtrustningButton;
    private javax.swing.JPanel lanaUtrustningPanel;
    private javax.swing.JLabel lanadUtrustningLabel;
    private javax.swing.JPanel lanadUtrustningPanel;
    private javax.swing.JScrollPane lanadUtrustningScrollPane;
    private javax.swing.JTextArea lanadUtrustningTextArea;
    private javax.swing.JButton listaAlienEfterPlatsButton;
    private javax.swing.JButton listaAliensEfterRasButton;
    private javax.swing.JButton listaAliensefterDatumButton;
    private javax.swing.JTabbedPane menyTabbedPane;
    private javax.swing.JLabel mibPortalLabel;
    private javax.swing.JLabel namnLabel;
    private javax.swing.JLabel nuvarandeKontorschefLabel;
    private javax.swing.JLabel ocIDLabel;
    private javax.swing.JLabel ocNamnLabel;
    private javax.swing.JLabel ocTelefonLabel;
    private javax.swing.JLabel omradeLabel;
    private javax.swing.JLabel omradeschefIDLabel;
    private javax.swing.JLabel omradeschefNamnLabel;
    private javax.swing.JLabel omradeschefTelefonLabl;
    private javax.swing.JLabel platsLabel;
    private javax.swing.JLabel rasLabel;
    private javax.swing.JButton registreraAgentButton;
    private javax.swing.JPanel registreraAgentPanel;
    private javax.swing.JButton registreraAlienButton;
    private javax.swing.JPanel registreraAlienPanel;
    private javax.swing.JPanel registreraAndraAlienPanel;
    private javax.swing.JButton registreraUtrustningButton;
    private javax.swing.JPanel registreraUtrustningPanel;
    private javax.swing.JLabel resultatLabel;
    private javax.swing.JScrollPane resultatScrollPane;
    private javax.swing.JTextArea resultatTextArea;
    private javax.swing.JButton sattOmradeschefButton;
    private javax.swing.JLabel sidLabel;
    private javax.swing.JPanel sidPanel;
    private javax.swing.JSeparator skiljeStreck1;
    private javax.swing.JSeparator skiljeStreck2;
    private javax.swing.JSeparator skiljeStreck3;
    private javax.swing.JSeparator skiljeStreck4;
    private javax.swing.JSeparator skiljeStreck5;
    private javax.swing.JSeparator skiljeStreck6;
    private javax.swing.JSeparator skiljestreck;
    private javax.swing.JTextField sokAlienNamnTextField;
    private javax.swing.JPanel sokAlienPanel;
    private javax.swing.JButton sokAllInfoButton;
    private javax.swing.JLabel sokAllInfoLabel;
    private javax.swing.JLabel sokDatumLabel;
    private javax.swing.JComboBox<String> sokOmradesBox;
    private javax.swing.JPanel sokOmradesChefPanel;
    private javax.swing.JComboBox<String> sokPlatsBox;
    private javax.swing.JLabel sokPlatsLabel;
    private javax.swing.JComboBox<String> sokRasBox;
    private javax.swing.JLabel sokRasLabel;
    private javax.swing.JComboBox<String> soktOmradeBox;
    private javax.swing.JPanel sökVerktygsPanel;
    private javax.swing.JButton taBortUtrustningButton;
    private javax.swing.JPanel taBortUtrustningPanel;
    private javax.swing.JSpinner tillDatumSpinner;
    private javax.swing.JLabel tillLabel;
    private javax.swing.JButton uppdateraLanadUtrustningButton;
    private javax.swing.JPanel utrustningOmradePanel;
    private javax.swing.JComboBox<String> valjAlienBox;
    private javax.swing.JComboBox<String> valjKontorschefBox;
    private javax.swing.JButton valjKontorschefButton;
    private javax.swing.JLabel valjKontorschefLabel;
    private javax.swing.JPanel valjKontorschefPanel;
    private javax.swing.JLabel valjLabel;
    private javax.swing.JComboBox<String> valjOmradeschefBox;
    private javax.swing.JLabel valjOmradeschefLabel;
    private javax.swing.JPanel valjOmradeschefPanel;
    private javax.swing.JLabel visaInfoOmradeschefLabel;
    // End of variables declaration//GEN-END:variables
}
